"""
Django settings for imdb_project project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from pathlib import Path

# BASE_DIR points to the project root (where manage.py lives)
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY: keep this secret in production! Using DEBUG for dev.
SECRET_KEY = "django-insecure-onxc+4qm(f^dvs0*fdmf+#l)8#css+yq+0ya(qcfdgx8m59ix^"
DEBUG = False
ALLOWED_HOSTS = [
    'anthonyn30.pythonanywhere.com',
]

# --- Installed Applications ---
INSTALLED_APPS = [
    "django.contrib.admin",           # Admin site
    "django.contrib.auth",            # Authentication system
    "django.contrib.contenttypes",    # Content type framework
    "django.contrib.sessions",        # Session management
    "django.contrib.messages",        # Flash messages
    "django.contrib.staticfiles",     # Serve static files
    'rest_framework',                   # DRF for API endpoints
    'movies',                           # My movie app
    'drf_spectacular',                  # OpenAPI/Swagger generation
]

# --- Middleware Stack ---
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "imdb_project.urls"  # Main URL configuration

# --- Templates Configuration ---
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],  # You can add global template dirs here
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "imdb_project.wsgi.application"  # WSGI entrypoint for servers

# --- Database Setup ---
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",  # Default DB for dev and tests
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# --- Password Validation (default rules) ---
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# --- Internationalization ---
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# --- Static Files (CSS, JS, Images) ---
STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / 'staticfiles'
# Default primary key field type for new models
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# --- REST Framework & OpenAPI Configuration ---
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',  # Use drf-spectacular for schema
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'My Movie API',
    'DESCRIPTION': 'A REST API for movies, built with Django & DRF',
    'VERSION': '1.0.0',
}
